<script src="tom-select.complete.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script> 
<script>
    function createChart(data) {
        const ctx = document.getElementById(`chart`).getContext("2d");
        let chartStatus = Chart.getChart("chart"); 
        if (chartStatus != undefined) {
        chartStatus.destroy();
        }

    console.log("data",data)
    const empresas = Object.keys(data);
    const indicatorLabels = Object.keys(data[empresas[0]]);
    const colores = [ "#59A250", "#B7A5E6", "#B8453E", "#485FC7", "#F7DD46"];
    const datas= [];
    let j=0;
    let k=2;
    for(let i of empresas) {
        datas.push({
                label: i,
                data: Object.values(data[i]),
                borderColor: colores[j],
                borderWidth: 3,
                backgroundColor: colores[j]+"00",
            });
        j = j+1;
        k = k+3;
    }
    console.log(datas);

    new Chart(ctx, { 
        type: 'radar',
        data: {
            labels: indicatorLabels,
            datasets: datas, 
        },
        options: {
            plugins: {
                legend: {
                    display: true,
                    position:'right',
                    labels: {
                        padding: 30, 
                        color: "#FFFFFF", 
                        usePointStyle: true,
                        textAlign: 'center',
                        
                    }
                }
            },
            scales: {
                r: {
                    backgroundColor: "#454545",
                    hoverBackgroundColor: "#767574",
                    angleLines: { 
                        display: false,
                    },
                    grid: {
                        color: "#747474" 
                    },
                    suggestedMin: 0,
                    suggestedMax: 5,
                    ticks: {
                        stepSize: 1, 
                        beginAtZero: true,
                        color: "#EEEEEE",
                        backdropColor: "#454545" , 
                    },
                    pointLabels: {  
                        padding:20,
                        color: "#FFFFFF", 
                        font: {
                            size: 13,
                            weight: "italic"
                        }
                    }
                }
            }
        } 
    });
    }
    
    function showComapnyCheckboxes(value) {
        var checkboxes = document.getElementById(value);
        if (checkboxes.style.display == "block") {
            checkboxes.style.display = "none";
        } else {
            checkboxes.style.display = "block";
        }
    }

    function hideComapnyCheckboxes(value) {
        var checkboxes = document.getElementById(value);
        checkboxes.style.display = "none";

    }

    function showDepartmentCheckboxes(value) {
        const companies = document.querySelectorAll("[id$=-company]");
        const selectedCompanies = Array.from(companies)
            .filter(c => c.checked)
            .map(c => c.value);

        const nodept = document.querySelectorAll("[id$=-department]");
        const departmentMap = {};

        selectedCompanies.forEach(company => {
            nodept.forEach(department => {
                if (department.id.startsWith(company)) {
                    const deptValue = department.value;
                    if (!departmentMap[deptValue]) {
                        departmentMap[deptValue] = [];
                    }
                    departmentMap[deptValue].push(company);
                }
            });
        });

        nodept.forEach(department => {
            department.parentElement.style.display = "none";
        });

        for (let deptValue in departmentMap) {
            const companiesForDept = departmentMap[deptValue];
            if (companiesForDept.length > 1) {
                companiesForDept.forEach(company => {
                    const departmentElement = Array.from(nodept).find(department => department.value === deptValue && department.id.startsWith(company));
                    if (departmentElement) {
                        departmentElement.parentElement.style.display = "block";
                        departmentElement.nextElementSibling.innerText = `${deptValue} - ${company}`;
                    }
                });
            } else if (companiesForDept.length === 1) {
                const departmentElement = Array.from(nodept).find(department => department.value === deptValue && department.id.startsWith(companiesForDept[0]));
                if (departmentElement) {
                    departmentElement.parentElement.style.display = "block";
                    departmentElement.nextElementSibling.innerText = deptValue;
                }
            }
        }

        const checkboxes = document.getElementById(value);
        checkboxes.style.display = "block";
    }

    function updateInfoText() {
        const date = new Date();
        
        const day = String(date.getDate()).padStart(2, '0'); 
        const month = String(date.getMonth() + 1).padStart(2, '0'); 
        const year = date.getFullYear();

        const formattedDate = `${day}/${month}/${year}`;

        const departmentCheckboxes = document.querySelectorAll("[id$='-department']");
        const selectedDepartments = Array.from(departmentCheckboxes)
            .filter(checkbox => checkbox.checked)
            .map(checkbox => checkbox.value);

        const selectPeriod = document.querySelector("#periodic_select");
        const periodicity = selectPeriod.options[selectPeriod.selectedIndex]?.text || "Sin periodo";

        const summary = `${formattedDate} | ${selectedDepartments.join(', ') || 'Ninguno'} | ${periodicity}`;
        document.getElementById("report-info").innerText = summary;
    }

    
    function fetchData() {
        const companies = document.querySelectorAll("[id$=-company")
        companies.forEach(company => {
            company.addEventListener('change', () => showDepartmentCheckboxes('department'));
        });
        const department = document.querySelectorAll("[id$=-department]")
        const collab = document.querySelectorAll("[id$=-collab]")
        const periodicity = document.querySelector("#periodic_select")
        
        const company_values = Array.prototype.reduce.call(companies, (acc, c) => {
            if (c.checked) {
                acc.push(c.value)
            }
            return acc
        }, [])
        const department_values = Array.prototype.reduce.call(department, (acc, d) => {
            if (d.checked) {
                acc.push(d.value)
            }
            return acc
        }, [])
        const collabs_values = Array.prototype.reduce.call(collab, (acc, c) => {
            if (c.checked) {
                acc.push(c.value)
            }
            return acc
        }, [])

        const csrf = document.querySelector('#_csrf').value        
        fetch('/reports', {
            method: 'POST',
            headers: {
            'Content-Type': 'application/json',
            'csrf-token': csrf
            },
            body: JSON.stringify({
                message: "Prueba metodo post",
                company_values,
                department_values,
                collabs_values,
            })
        })
        .then((response) => response.json())
        .then(data => {
            // Create chart with data
            createChart(data)
            updateInfoText();
        })
        .catch(error => console.error("ERROR: ", error))
    }

</script>