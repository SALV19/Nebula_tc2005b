<script>
  const holidays = <%- JSON.stringify(holidays)%>;
  const all_requests = <%- JSON.stringify(all_requests)%>;
  

  function get_inbetween_dates(start, end) {
    let current = new Date(start);
    end = new Date(end);
    const dates = [];

    while (current <= end) {
      dates.push(current.toISOString().split('T')[0]); // yyyy-mm-dd
      current.setDate(current.getDate() + 1);
    }

    return dates;
  }

  function get_holidays() {
    const taken_days = [];

    for (let i=0; i<holidays.length; i++) {
      const h = holidays[i];
      console.log(holidays[i])

      if (h.fecha_inicio != h.fecha_fin) {
        const range = get_inbetween_dates(h.fecha_inicio, h.fecha_fin);
        taken_days.push(...range);
      }
      else {
        const dateWhithoutTime = new Date(h.fecha_inicio).toISOString().split('T')[0];// yyyy-mm-dd
        taken_days.push(dateWhithoutTime );
      }
    }
    console.log("Feriados (formato final):", taken_days);
    return taken_days;
  }

  function get_approved_days() {
    const approved_days = all_requests.map(r => {
      return new Date(r.fecha).toISOString().split('T')[0]; // 'yyyy-mm-dd'
    });

    console.log("Días aprobados del colaborador:", approved_days);
      return approved_days;
  }

  // Función para contar días hábiles (sin sábados ni domingos)
  function realsDaysOff(start, end) {
    const holidaysList = get_holidays();
    const approvedDays = get_approved_days();
    const current = new Date(start);
    const final = new Date(end);
    const effective = [];

    while (current <= final) {
      const dateStr = current.toISOString().split('T')[0];
      const isWeekend = current.getDay() === 5 || current.getDay() === 6;

      if (!isWeekend && !holidaysList.includes(dateStr) && !approvedDays.includes(dateStr)) {
        effective.push(dateStr);
      }

      current.setDate(current.getDate() + 1);
    }
    console.log("Días solicitados por el usuario:", effective);
    return effective;
  }

  function updateDaysCounter() {
    const start = startDate.value;
    const end = endDate.value;

    if (start && end) {
      const validDays = realsDaysOff(start, end);

      if (validDays.length > 0) {
        daysCounter.style.display = "block";
        daysCounterText.innerHTML = `Estás solicitando <strong>${validDays.length}</strong> días efectivos.`;
      } else {
        daysCounter.style.display = "block";
        daysCounterText.innerHTML = `<span class="has-text-danger">⚠ No estás solicitando ningún día válido.</span>`;
      }
    } else {
      daysCounter.style.display = "none";
    }
  }


  document.addEventListener("DOMContentLoaded", function () { 
    const openBtn = document.getElementById("openRequestForm");
    const closeBtn = document.getElementById("closeRequestForm");
    const requestPopup = document.getElementById("requestPopup");
    const requestType = document.getElementById("requestType");
    const startDate = document.getElementById("startDate");
    const endDate = document.getElementById("endDate");
    const evidenceContainer = document.getElementById("evidenceContainer");
    const daysCounter = document.getElementById("daysCounter");
    const daysCounterText = document.getElementById("daysCounterText");
    
    // Verifica si los elementos existen
    if (!openBtn || !closeBtn || !requestPopup || !requestType || !startDate ||!evidenceContainer|| !daysCounter || !daysCounterText) {
        console.error("Error: No se encontraron los elementos del pop-up.");
        return;
    }

    // Abrir el formulario
    openBtn.addEventListener("click", () => {
        requestPopup.style.display = "flex";
    });

    requestType.addEventListener("change", () => {
      checkEvidenceRequirement();
      updateDaysCounter();
    });

    startDate.addEventListener("change", () => {
      checkEvidenceRequirement();
      updateDaysCounter();
    });

    endDate.addEventListener("change", () => {
      checkEvidenceRequirement();
      updateDaysCounter();
    });

    // Cerrar el formulario
    closeBtn.addEventListener("click", () => {
      requestPopup.style.display = "none";
    });

    const requestForm = document.querySelector("form"); 

    // Alerta de selecciona minimo un día habil 
    requestForm.addEventListener("submit", function (e) {
      const start = startDate.value;
      const end = endDate.value;
      const validDays = realsDaysOff(start, end);

      if (validDays.length < 1) {
        e.preventDefault(); // Evita que se mande
        alert("⚠ Debes seleccionar al menos un día hábil válido para enviar la solicitud.");
      }
    // Pasar los días válidos al input oculto
    document.getElementById("validDaysInput").value = JSON.stringify(validDays);

    });

  });

  // Mostrar o esconder el campo de evidencia
  function checkEvidenceRequirement() {
    const type = requestType.value;
    const start = startDate.value;
    const end = endDate.value;

    const validDays = realsDaysOff(start, end);
    
    if (type === "Absence" && start && end) {
      if (validDays.length > 3) {
        evidenceContainer.style.display = "block";
        evidenceNote.style.display = "block"; // Muestra la leyenda
      } else {
        evidenceContainer.style.display = "none";
        evidenceNote.style.display = "none"; // Oculta si no aplic
      }
    } else {
      evidenceContainer.style.display = "none";
      evidenceNote.style.display = "none";
    }
  }

  // Ejecutar checkEvidenceRequirement cuando cambian los campos
  requestType.addEventListener("change", checkEvidenceRequirement);
  startDate.addEventListener("change", checkEvidenceRequirement);
  endDate.addEventListener("change", checkEvidenceRequirement);

</script>