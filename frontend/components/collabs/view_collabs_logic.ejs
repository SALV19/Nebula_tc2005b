<script>
  // Crea el contenido de la tabla para solicitudes
  function createTableCollabs(data) {
    console.log("Datoooos: ", data);
    console.log("longitud:",data.collabs.length );
    const table = document.querySelector('#requests_table')
    let table_content = `<thead>
                          <tr >
                            <th style="background-color: #242424">  </th>
                            <th >Name</th>
                            <th >Position</th>
                            <th >Department</th>
                            <th >Company</th>
                          </tr>
                        </thead>
  <tbody >`
    // Información por cada rengrlón de la tabla
    data.collabs.forEach((d, idx) => {
      table_content += `<tr id='collab-${idx}' key='${idx}'>`
      table_content += `<td style="padding-top: 1rem; padding-bottom: 0.8rem;"><i class="bi bi-caret-down-fill" id="icon-${idx}""></i></td>`
      table_content += `<td style="padding-top: 1rem; padding-bottom: 0.8rem;">${d.nombre} ${d.apellidos}</td>`
      table_content += `<td style="padding-top: 1rem; padding-bottom: 0.8rem;">${d.puesto}</td>`
      table_content += `<td style="padding-top: 1rem; padding-bottom: 0.8rem;">${d.nombre_departamento} </td>`
      table_content += `<td style="padding-top: 1rem; padding-bottom: 0.8rem;">${d.nombre_empresa} </td>`
      table_content += '</tr>';
      // Contenido desplegable
      table_content += `<tr class="additional-row" id="additional-row-${idx}" style="display: none;">
                          <td colspan='6'>
                            <div class='columns'>
                              <div class="column is-1">
                                <p class='has-text-weight-bold mb-4'>Phone</p>
                                <p class='has-text-weight-bold mb-4'>Mail</p>
                                <p class='has-text-weight-bold mb-4'>Role</p>
                                <p class='has-text-weight-bold mb-4'>Modality</p>
                                <p class='has-text-weight-bold mb-2'>Birthday</p>
                              </div>
                              <div class="column ">
                                  <p class='mb-4'>${d.telefono}</p>
                                  <p class='mb-4'>${d.email}</p>
                                  <p class='mb-4'>${d.tipo_rol}</p>
                                  <p class='mb-4'>${d.modalidad == 1 ? 'In Person' : 
                                    d.modalidad == 2 ? 'Online' : 'Hybrid'}</p>
                                  <p class='mb-2'>${d.fechaNacimiento.split("T")[0]}</p>
                              </div>
                              <div class="column my-2">
                                <div class='is-flex is-justify-content-space-around	mb-4'>
                                  <div class='flex-centered'>
                                    <p class='has-text-danger  is-size-1'>${d.FaltasAdministrativas}</p>
                                    <p class='has-text-centered is-size-7'>Faults<br>commited</p>
                                  </div>
                                  <div class='flex-centered'>
                                    <p class='is-size-1'>${data.diasDisponibles_Totales[idx].diasDisponibles}/${data.diasDisponibles_Totales[idx].diasTotales}</p>
                                    <p class='has-text-centered is-size-7'>Days of<br>vacations Left</p>
                                  </div>
                                  <div class='flex-centered'>
                                    <p class='is-size-1'>${data.abscences[idx]}</p>
                                    <p class='has-text-centered is-size-7'>Current<br>abscences</p>
                                  </div>
                                </div>
                                ${d.estado <= 0 
                                  ? '' 
                                  : `<div class='is-flex is-justify-content-center '}>
                                      <button class='button is-link is-rounded is-small is-size-7' onclick="update_button('${d.id_colaborador}')">UPDATE</button>
                                    </div>`
                                    }
                              </div>
                            </div>
                          </td>
                        </tr>`;
    })
    table_content += '</tbody>'
    table.innerHTML = table_content
    // <button class='ml-6 button is-danger is-rounded has-text-white'>DELETE</button>

    // Añade función para expandir el contenido extra
    const entries = document.querySelectorAll('[id^="collab-"]');
      entries.forEach((node, idx) => {
        node.addEventListener('click', () => {
          const additionalRow = document.getElementById(`additional-row-${idx}`);
          const caret = document.getElementById(`icon-${idx}`);
          const isHidden = additionalRow.style.display === "none";

          additionalRow.style.display = isHidden ? "table-row" : "none";
          caret.classList.toggle('bi-caret-down-fill', !isHidden);
          caret.classList.toggle('bi-caret-right-fill', isHidden);
        });
      })

  }
  // Consulta a db para la información de solicitudes
  const get_info = (pagination=0, filter=null) => {
    const csrf = document.getElementById('_csrf').value
    const selected_option = document.querySelector('.selected')
    const route = selected_option.innerHTML;
    fetch(`/view_collabs/${route}`, {
      method: 'POST',
      headers: {
            'Content-Type': 'application/json',
            'csrf-token': csrf
        },
      body: JSON.stringify({
        offset: pagination,
        filter: filter,
      }),
    })
    .then(response => response.json())
    .then(data => {
      createTableCollabs(data)
    })
    .catch(e => console.error(e))
  }
 

      // Permite cambiar entre pestañas
  const options = document.querySelectorAll(".option")
  console.log('options', options);
    for (let i=0; i<options.length; i++) {
        options[i].addEventListener('click', (b) => {
        options.forEach((element) => {
            element.classList.remove('selected')
        })
          options[i].classList.add('selected')
          if (options[i].innerHTML == 'Faults') {
                get_faults_info()
                return;
          }
          get_info()  
        })
    }

    const prev_button = document.querySelector("#prev-page");
    const next_button = document.querySelector("#next-page");
    const pagination_value = document.querySelector("#pagination");
    

    // Cambiar de página / ver los siguientes 10 registros
    prev_button.addEventListener('click', () => {
        pagination_value.value = 
        pagination_value.value - 1 <= 1 ? 1 : pagination_value.value - 1
        
        pagination_value.dispatchEvent(new Event('change'));
    })

    next_button.addEventListener('click', () => {
        pagination_value.value = Number(pagination_value.value) + 1
        
        pagination_value.dispatchEvent(new Event('change'));
    })
    pagination_value.addEventListener('change', (v) => {
      const selected_option = document.querySelector('.selected')
      const route = selected_option.innerHTML;

      if (route == 'Faults'){
        get_faults_info(pagination_value.value-1);
        return
      }
      get_info(pagination_value.value-1);
      
    })

  
  function searchParam(content) {
    const selected_option = document.querySelector('.selected')
    const route = selected_option.innerHTML;
    if (route == 'Faults'){
      get_faults_info(0, content);
      return;
    }
    get_info(0, content)
  }
  
  document.addEventListener("DOMContentLoaded", function() {
    get_faults_info()
    get_info()
  })
</script>