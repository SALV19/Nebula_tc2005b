<link rel="stylesheet" href="/css/calendar.css" />
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<body>
  <div id='calendar' class="calendar"></div>
</body>
<script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.15/index.global.min.js'></script>
<script>
  let eventoSeleccionado = null;  
  document.addEventListener('DOMContentLoaded', function() {
    var calendarEl = document.getElementById('calendar');

    // console.log("eventos", eventos);
    var calendar = new FullCalendar.Calendar(calendarEl, {
      initialView: 'dayGridMonth',
      themeSystem: 'bootstrap5', 
      height: "auto",
      aspectRatio: 1.6,
      headerToolbar: {
        left: 'prev,next today',
        center: 'title',
        right: 'dayGridMonth,timeGridWeek,timeGridDay'
      },
      events: eventos,
      moreLinkText: 'more',
      dayMaxEvents: 3,
      height: 700,
      eventClick: function(info) {
        // Mostrar el pop-up
        const popup = document.getElementById('pop-up');
        if (popup) {
          console.log(info.event);
          const endDate = info.event.end;

          eventoSeleccionado = info.event;

          // Opciones para formato en español
          const fechaOptions = { year: 'numeric', month: 'long', day: 'numeric' };
          const horaOptions = { hour: '2-digit', minute: '2-digit' };
          // Mostrar el pop-up
          popup.style.display = 'block';  // Cambiar a 'block' para mostrarlo

          // Rellenar la información del pop-up con los datos del evento
          document.getElementById('color-calendar').style.backgroundColor = info.event.backgroundColor;
          document.getElementById('event-title').innerText = info.event.title;
          const startDate = info.event.start;
          // Mostrar solo la fecha
          document.getElementById('event-date').innerText = startDate.toLocaleDateString('en-US', fechaOptions);
          // Mostrar hora de inicio
          document.getElementById('event-hour-start').innerText = startDate.toLocaleTimeString('en-US', horaOptions);
          // Mostrar hora de fin (si existe)
          document.getElementById('event-hour-end').innerText = endDate ? endDate.toLocaleTimeString('en-US', horaOptions)
            : 'No end hour availablr';
          document.getElementById('event-details').innerText = info.event.extendedProps.description || 'No description available';
        }
      }
    });
    calendar.render();
  });
  
  // Función para cerrar el pop-up
  function closePopup() {
    const popup = document.getElementById('pop-up');
    popup.style.display = 'none';  // Cambiar a 'none' para ocultarlo
  }

  function deleteEvent(eventId, calendarId) {
    const csrfToken = document.getElementById('_csrf').value;
    console.log('Token que estoy mandando:', csrfToken);
    fetch('/deleteEvent', {
      method: "POST",
      headers: {
        'Content-Type': 'application/json',
        'CSRF-Token': csrfToken,
      },
      body: JSON.stringify({ eventId, calendarId })
    })
    .then(response => {
      const popup = document.getElementById('pop-up');
      popup.style.display = 'none';
      if (response.ok) {
        const Toast = Swal.mixin({
          toast: true,
          position: 'top-end',
          showConfirmButton: false,
          timer: 2000,
          timerProgressBar: true,
          didOpen: (toast) => {
            toast.addEventListener('mouseenter', Swal.stopTimer)
            toast.addEventListener('mouseleave', Swal.resumeTimer)
          }
        });

        Toast.fire({
          icon: 'success',
          title: 'Successfully deleted event'
        });

        setTimeout(() => {
          window.location.href = '/'; 
        }, 2000);
      } else {
        return response.text().then(text => {
          throw new Error(text);
        });
      }
    })
    .catch(error => {
      Swal.fire({
        icon: 'error',
        title: 'Oops...',
        text: error.message || 'The event could not be deleted',
      });
    });
  }



</script>

