<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>  
<script>
    document.addEventListener("DOMContentLoaded", () => {
    const contentContainer = document.getElementById("content-section");

    // Si get_info necesita el texto del botón, puedes modificarla para recibirlo como parámetro
    function get_info(selectedOption) {
      console.log("Ejecutando get_info con opción:", selectedOption);
      
      // Seleccionar el contenedor donde se mostrará el contenido
      contentContainer.innerHTML = " ";
      if (selectedOption == 'Register'){
        contentContainer.innerHTML = `<%- include ('../components/follow_up/register_followUp.ejs') %>`;

        // SHOW INPUT BOX FOR QUESTIONS
        document.querySelectorAll(".toggle-icon").forEach((toggleIcon) => {
          toggleIcon.addEventListener("click", (event) => {
            const questionContainer = event.target.closest(".question-container");
            const hiddenContent = questionContainer.querySelector(".hidden-content");

            hiddenContent.classList.toggle("show");
          });
        });


        // RADAR CHART LOGIC AND CREATION
        const progressBars = document.querySelectorAll(".progress-bar");
        // console.log(progressBars);
        const progressTexts = document.querySelectorAll(".progress-text");
        // console.log(progressTexts);
        const indicatorLabels = [];
        for (let i = 0; i < progressTexts.length; i++){
          indicatorLabels.push(progressTexts[i].textContent.trim());
        }
        // console.log(indicatorLabels);

        let indicatorValues = new Array(indicatorLabels.length).fill(0);
        // console.log(indicatorValues);

        const ctx = document.getElementById("myRadarChart").getContext("2d");
        const radar = new Chart(ctx, { 
          type: 'radar',
          data: {
            labels: indicatorLabels,
            datasets: [{
              data: indicatorValues,
              backgroundColor: "#B7A5E6",
              borderColor: "#EEEEEE",
              borderWidth: 1,
            }]
          },
          options: {
            plugins: {
              legend: {
                display: false // Hide the legend
              }
            },
            scales: {
              r: {
                backgroundColor: "#FFFF",
                hoverBackgroundColor: "#767574",
                angleLines: { display: true },
                suggestedMin: 0,
                suggestedMax: 5,
                ticks: {
                  stepSize: 1,  // Ensures steps of 1
                  beginAtZero: true
                },
                pointLabels: {  
                  color: "#FFFF",  // Changes the label color
                  font: {
                    size: 10,
                    weight: "italic bold"
                  }
                }
              }
            }
          } 
        });
        
        function updateChart(){
          radar.data.datasets[0].data = indicatorValues;
          radar.update();
        };

        function updateValues(){
          for (let i = 0; i < progressBars.length; i++){
            indicatorValues[i] = parseInt(progressBars[i].value); 
          }
          updateChart(); 
        };

        for(let i = 0; i < progressBars.length ; i++){
          progressBars[i].addEventListener('input',updateValues);
        };

        //Show info message for progress bars
        const triggerElement = document.querySelectorAll(".elementBar");
        const targetElement = document.querySelectorAll(".showElement");
        triggerElement.forEach((trigger, index) => {
          trigger.addEventListener("mouseover", () => {
            targetElement[index].style.display = "block";
          })

          trigger.addEventListener("mouseout" , () => {
            targetElement[index].style.display = "none";
          })
        })

        // VALIDATE COLLAB AND DATE
        let collaboratorSelect = document.getElementById("collaborators");
        let errorMessage = document.getElementById("errorMessage");
        let submitButton = document.getElementById("submitButton");
        let selectDate = document.getElementById("filter_end");

        let today = new Date(); 
        today.setDate(today.getDate() - 1);  

        let currentDate = today.toISOString().split('T')[0]; 

        console.log('hoy', currentDate); 
        console.log('sel', selectDate.value);  


         // VALIDATE DATE
        selectDate.addEventListener("change", function(){
          if(selectDate.value >= currentDate){
            dateError.classList.remove("show");
          } else {
            dateError.classList.add("show");
          };
        });

         // VALIDATE COLLAB
        collaboratorSelect.addEventListener("change", function(){
          if (collaboratorSelect.value != "default"){
            errorMessage.classList.remove("show");
          } else {
            errorMessage.classList.add("show");
          };
        });

        // VALIDATE FORM
        submitButton.addEventListener("click", function (event) {
          // Validate dates
          if (selectDate.value < currentDate){
            event.preventDefault();
            dateError.classList.add("show");
          } else {
            dateError.classList.remove("show");
          };

          if (collaboratorSelect.value === "default"){
            event.preventDefault();
            errorMessage.classList.add("show");
          } else {
            errorMessage.classList.remove("show");
          };
        });

      }
      // else if (selectedOption == 'Collaborators'){
      //     fetch('/follow_ups/Collaborators')
      //     .then(response => {
      //       console.log("Respuesta recibida:", response.status);
      //       return response.text();
      //     })
      //     .then(html => {
      //       console.log("HTML recibido, actualizando contenido");
      //       contentContainer.innerHTML = html;  
      //     })
      //     .catch(error => {
      //       console.error(error);
      //       contentContainer.innerHTML = '<p>Error al cargar las reuniones. Por favor, intente de nuevo.</p>';
      //     });
      // }
    
        

      else {
        contentContainer.innerHTML= ` <p> Meetings </p>`;
      }
    }

    

    // LOGIC FOR THE NAVBAR BUTTONS OF THIS PAGE
    document.querySelectorAll(".option").forEach(option => {
      option.addEventListener("click", (event) => {
        // Eliminar la clase 'selected' de todos
        document.querySelectorAll(".option").forEach(el => el.classList.remove("selected"));

        // Agregar la clase 'selected' al botón clickeado
        option.classList.add("selected");

        // Obtener y mostrar el contenido del botón
        const buttonText = option.textContent.trim();
        // console.log("Botón seleccionado:", buttonText);

        if (option.innerHTML == 'Register'){
          get_info(buttonText);
        } else if (option.innerHTML == 'Collaborators'){
          get_info_FU()
        }

      });
    });

  });
</script>
