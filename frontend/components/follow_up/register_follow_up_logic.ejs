<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>  
<script>
    document.addEventListener("DOMContentLoaded", () => {
    })
    // Si get_info necesita el texto del botón, puedes modificarla para recibirlo como parámetro
    function get_register(data) {
      console.log("Datos dentro de get_register: ", data);
      const contentContainer = document.getElementById("content-section");

      let content = " ";
      content += ` 
      <form action="/follow_ups/Register/save" method="POST">
        <input type="hidden" name="_csrf" value="<%= csrfToken %>">
        <div class="column-container">
            <section class='column'>
            <div name="nombre">
                <label class="is-size-6 styling" for="collaborators">Employee</label>
                <select id="collaborators" class="line-input text-style" name="id_colaborador">
                <option value="default" disabled selected>Select Collaborator</option>
      `
      if (data.colaboradores.length > 0) {
        for (let i = 0; i < data.colaboradores.length; i++) {

      content += `<option value="${data.colaboradores[i].id_colaborador}"> `

      content += data.colaboradores[i].nombre + " " + data.colaboradores[i].apellidos

      content += `</option>`

        }
      } else {
        content += `<option disabled> No hay colaboradores disponibles </option>`
      }
      content += `</select>
            <p id="errorMessage" class="text-hidden"> Select a collaborator </p>
        </div>  `
      
      content += `
      <div>
        <label class="is-size-6 styling">Date</label>
        <input class="dateLine" type="date" id="filter_end" name="fechaAgendada" value=${new Date().toISOString().split('T')[0]}/ >
        <p id="dateError" class="text-hidden"> Select a valid date </p>

      </div>
      <div id="questions-container"> 
      ` 
      for(let i = 0; i < data.questions.length; i++) {
        content += `
        <div class="question-container">
            <p class="line-questions">
            <span>
                ${data.questions[i].pregunta}
            </span>
            <i class="bi bi-caret-down-fill toggle-icon"></i>
            </p>

            <!-- Campo oculto para enviar el ID de la pregunta -->
            <input type="hidden" name="id_pregunta" value="${data.questions[i].id_pregunta}">

            <!-- Campo de entrada para la respuesta -->
            <input class="hidden-content" name="respuesta" placeholder="Escribe tu respuesta aquí">
        </div>
            ` 
      }
      content += `
      </div>
        <div class="button-container">
              <button id="submitButton" class="approve-button" type="submit">Submit</button>
          </div>
      </section>

      <section class='column'>
          <div class="radar-container">
              <canvas id="myRadarChart"></canvas>
          </div>

          <div>
      `
      for(let i = 0; i < data.indicator.length; i++) {
        content += `
          <div class="container">
                <div class="progress-container">
                    <p class="progress-text"> ${data.indicator[i].indicador} </p>
                    <i class="bi bi-info-circle elementBar"></i>
                </div>

                <p class="hidden-message showElement dropdown-content" style="display: none;"> 
                    How does the employee feel about their ${data.indicator[i].indicador} ?<br>
                    0 = unsatisfied | 5 = satisfied
                </p>

                <input type="hidden" name="id_indicador" value="${ data.indicator[i].id_indicador}">
                <input class="progress-bar" name="valor_metrica" type="range" min="0" max="5" value="0">
            </div>
            
            <div class="numbers-container">
                <p class="numbers">
                    0
                </p>
                <p class="numbers">
                    1
                </p>
                <p class="numbers">
                    2
                </p>
                <p class="numbers">
                    3
                </p>
                <p class="numbers">
                    4
                </p>
                <p class="numbers">
                    5
                </p>
            </div>
        `
      }    
      content += `
          </div>
        </div>
      </form>
      `    
      contentContainer.innerHTML = content;

      logicRegister();

    }

    function logicRegister () {
          document.querySelectorAll(".toggle-icon").forEach((toggleIcon) => {
            toggleIcon.addEventListener("click", (event) => {
              const questionContainer = event.target.closest(".question-container");
              const hiddenContent = questionContainer.querySelector(".hidden-content");

              hiddenContent.classList.toggle("show");
            });
          });


          const progressBars = document.querySelectorAll(".progress-bar");
          // console.log(progressBars);
          const progressTexts = document.querySelectorAll(".progress-text");
          // console.log(progressTexts);
          const indicatorLabels = [];
          for (let i = 0; i < progressTexts.length; i++){
            indicatorLabels.push(progressTexts[i].textContent.trim());
          }
          // console.log(indicatorLabels);

          let indicatorValues = new Array(indicatorLabels.length).fill(0);
          // console.log(indicatorValues);

          const ctx = document.getElementById("myRadarChart")
          console.log('Graph: ', ctx);
          ctx.getContext("2d");
          const radar = new Chart(ctx, { 
            type: 'radar',
            data: {
              labels: indicatorLabels,
              datasets: [{
                data: indicatorValues,
                backgroundColor: "#B7A5E6",
                borderColor: "#EEEEEE",
                borderWidth: 1,
              }]
            },
            options: {
              plugins: {
                legend: {
                  display: false // Hide the legend
                }
              },
              scales: {
                r: {
                  backgroundColor: "#FFFF",
                  hoverBackgroundColor: "#767574",
                  angleLines: { display: true },
                  suggestedMin: 0,
                  suggestedMax: 5,
                  ticks: {
                    stepSize: 1,  // Ensures steps of 1
                    beginAtZero: true
                  },
                  pointLabels: {  
                    color: "#FFFF",  // Changes the label color
                    font: {
                      size: 10,
                      weight: "italic bold"
                    }
                  }
                }
              }
            } 
          });
          
          function updateChart(){
            radar.data.datasets[0].data = indicatorValues;
            radar.update();
          };

          function updateValues(){
            for (let i = 0; i < progressBars.length; i++){
              indicatorValues[i] = parseInt(progressBars[i].value); 
            }
            updateChart(); 
          };

          for(let i = 0; i < progressBars.length ; i++){
            progressBars[i].addEventListener('input',updateValues);
          };
      }
    
    
    const get_info_register = () => {
      const csrf = document.getElementById('_csrf').value
      const selected_option = document.querySelector('.selected')
      const route = selected_option.innerHTML
      console.log(route)
      fetch(`/follow_ups/${route}`, {
        method: 'GET',
      })
      .then(response => {
        console.log(response.body)
        return response.json()
      })
      .then(data => {
        console.log("Datos recibidos: ", data);
        get_register(data);
      })
      .catch(e => console.log("error", e))
    }
    // const post_register = () => {
  
    //   const csrf = document.getElementById('_csrf').value
    //   const selected_option = document.querySelector('.selected')
    //   const submit = document.querySelector(".approve-button");
    //   submit.addEventListener("click", (event) => {
    //     event.preventDefault();

    //     fetch(`/follow_ups/${route}`, {
    //         method: 'POST',
    //         headers: {
    //             'Content-Type': 'application/json',
    //             'csrf-token': csrf,
    //         },
    //         body: JSON.stringify({
    //             id_colaborador: document.querySelector('[name="id_colaborador"]').value,
    //             fechaAgendada: document.querySelector('[name="fechaAgendada"]').value,
    //             id_pregunta: document.querySelector('[name="id_pregunta"]').value,
    //             respuesta: document.querySelector('[name="respuesta"]').value,
    //             id_indicador: document.querySelector('[name="id_indicador"]').value,
    //             valor_metrica: document.querySelector('[name="valor_metrica"]').value
    //         })
    //     })
    //     .then(response => response.json()) // ✅ Correct placement
    //     .then(data => console.log("respuesta del servidor: ", data))
    //     .catch(error => console.log("Error: ", error));
    //   })
    // }

    document.querySelectorAll(".option").forEach(option => {
      option.addEventListener("click", (event) => {
        // Eliminar la clase 'selected' de todos
        document.querySelectorAll(".option").forEach(el => el.classList.remove("selected"));

        // Agregar la clase 'selected' al botón clickeado
        option.classList.add("selected");
        console.log(event)
        get_info_register();
      });
    });
  
</script>
