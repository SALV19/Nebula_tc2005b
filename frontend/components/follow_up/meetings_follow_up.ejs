<!-- components/follow_up/meetings_follow_up.ejs -->
<div class="meetings-container">
    <!-- Tabla de reuniones o contenido relacionado -->
    <table class="table is-fullwidth">
      <thead>
        <tr>
          <th>Employee</th>
          <th>Title</th>
          <th>Date</th>
          <th>Time</th>
          <th>Status</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody>
        <% if (meetings && meetings.length > 0) { %>
          <% meetings.forEach(meeting => { %>
            <tr>
              <td><%= meeting.employee %></td>
              <td><%= meeting.title %></td>
              <td><%= meeting.date %></td>
              <td><%= meeting.hour %></td>
              <td><%= meeting.status %></td>
              <td>
                <button class="button is-small is-info" onclick="editMeeting('<%= meeting.id %>')">Edit</button>
                <button class="button is-small is-danger" onclick="deleteMeeting('<%= meeting.id %>')">Delete</button>
              </td>
            </tr>
          <% }) %>
        <% } else { %>
          <tr>
            <td colspan="6" class="has-text-centered">No meetings found</td>
          </tr>
        <% } %>
      </tbody>
    </table>
  </div>
  
  <!-- Formulario para agregar reuniones (oculto por defecto) -->
  <div id="meeting-popup" class="pop-up" style="display: none;">
    <form action="/meeting/create" method="POST" onsubmit="return validateMeetingForm()">
      <input type="hidden" name="_csrf" value="<%= csrfToken %>" >
      <div class="pop-up-content">
        <i class="bi bi-x-lg cancelButton" onclick="closeMeetingPopup()"></i>
        
        <div class="fixed-grid">
          <div class="grid">
            <div class="cell">
              <div><label class="subtitleForm">Employee</label></div>
              <section class="input-container">
                <select name="employee" id="employee" class="line-input dropdown" required>
                  <option value="" disabled selected>Select Employee</option>
                  <% if (employees && employees.length > 0) { %>
                    <% employees.forEach(employee => { %>
                      <option value="<%= employee.id %>"><%= employee.name %> <%= employee.lastName %></option>
                    <% }) %>
                  <% } else { %>
                    <option disabled>No employees available</option>
                  <% } %>
                </select>
                <p id="employee-error" class="error">Please select an employee</p>
              </section>
              
              <div><label class="subtitleForm">Date</label></div>
              <section class="input-container">
                <input name="date" type="date" id="date" class="dateLine" required>
                <p id="date-error" class="error">Please select a date</p>
              </section>
              
              <div><label class="subtitleForm">Hour</label></div>
              <section class="input-container">
                <input name="hour" type="time" id="hour" class="line-input" required>
                <p id="hour-error" class="error">Please select a time</p>
              </section>
              
              <div><label class="subtitleForm">Title</label></div>
              <section class="input-container">
                <input name="title" type="text" id="title" placeholder="Meeting title" class="line-input" required>
                <p id="title-error" class="error">Please enter a title</p>
              </section>
              
              <div><label class="subtitleForm">Description</label></div>
              <section class="input-container">
                <textarea name="description" id="description" placeholder="Meeting description" class="line-input"></textarea>
                <p id="description-error" class="error">Please enter a description</p>
              </section>
              
              <div><label class="subtitleForm">Repeating</label></div>
              <section class="input-container">
                <select name="repeating" id="repeating" class="line-input dropdown">
                  <option value="none">No repeat</option>
                  <option value="daily">Daily</option>
                  <option value="weekly">Weekly</option>
                  <option value="monthly">Monthly</option>
                </select>
                <p id="repeating-error" class="error">Please select an option</p>
              </section>
              
              <div class="buttons">
                <button type="submit" class="button is-save">Create</button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </form>
  </div>
  
  <script>
    function closeMeetingPopup() {
      document.getElementById('meeting-popup').style.display = 'none';
    }
  
    function validateMeetingForm() {
      let isValid = true;
      
      // Validar empleado
      const employee = document.getElementById('employee');
      if (!employee.value) {
        document.getElementById('employee-error').style.display = 'block';
        isValid = false;
      } else {
        document.getElementById('employee-error').style.display = 'none';
      }
      
      // Validar fecha
      const date = document.getElementById('date');
      if (!date.value) {
        document.getElementById('date-error').style.display = 'block';
        isValid = false;
      } else {
        document.getElementById('date-error').style.display = 'none';
      }
      
      // Validar hora
      const hour = document.getElementById('hour');
      if (!hour.value) {
        document.getElementById('hour-error').style.display = 'block';
        isValid = false;
      } else {
        document.getElementById('hour-error').style.display = 'none';
      }
      
      // Validar título
      const title = document.getElementById('title');
      if (!title.value) {
        document.getElementById('title-error').style.display = 'block';
        isValid = false;
      } else {
        document.getElementById('title-error').style.display = 'none';
      }
      
      return isValid;
    }
  
    function editMeeting(id) {
      // Lógica para editar una reunión
      console.error('Por implementar: editMeeting()');
    }
  
    function deleteMeeting(id) {
      // Lógica para eliminar una reunión
      if (confirm('Are you sure you want to delete this meeting?')) {
        const csrf = document.getElementById('_csrf').value;
        
        fetch(`/meeting/delete/${id}`, {
          method: 'DELETE',
          headers: {
            'CSRF-Token': csrf
          }
        })
        .then(response => {
          if (response.ok) {
            window.location.reload();
          } else {
            alert('Failed to delete meeting');
          }
        })
        .catch(error => {
          console.error('Error deleting meeting:', error);
        });
      }
    }
  </script>