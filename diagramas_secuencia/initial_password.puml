@startuml Prueba
autonumber
actor Usuario as u
boundary log_in.routes as lgr
boundary log_in.ejs as lge
boundary reset_password.ejs as rpe
control log_in.controller as lgc
control reset_password.controller as rpc
entity log_in.model as lgm
database Nebula as db

activate u
u -> lgr : GET /log_in
deactivate u

activate lgr
lgr -> lgc : get_login()
deactivate lgr
activate lgc
lgc -> lge : render("login")
deactivate lgc
activate lge
lge -> u : HTML login.ejs
deactivate lge 

activate u
u -> lgr : POST /log_in (email)
deactivate u

activate lgr
lgr -> lgc : getUserLogin()
deactivate lgr

activate lgc
lgc -> lgm : getUserLoginInfo(user_email)
activate lgm
lgm ->> db : SELECT email, first_login \nFROM Colaboradores \nWHERE email = user_email
activate db
db -->> lgm : [email, first_login]
deactivate db
lgm -->> lgc : [email, first_login]
deactivate lgm

alt first_login == true
    lgc -> rpc : get_initial_password()
    deactivate lgc
    activate rpc
    rpc -> rpe : render("reset_password")
    deactivate rpc
    activate rpe
    rpe -> u : HTML reset_password.ejs
    deactivate rpe
    
    activate u
    u -> rpc : POST /reset_password (password, password2)
    deactivate u
    
    activate rpc
    rpc -> rpc : post_initial_password(password, password2)
    rpc -> lgr : request.redirect("/log_in")
    deactivate rpc
    activate lgc
    
else
    lgc -> lgr : render("login", {error: "Usuario no vÃ¡lido o ya registrado"})
end

@enduml
