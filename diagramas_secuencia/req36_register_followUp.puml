@startuml REQ_36
autonumber
actor SuperAdmin as S
boundary followUp.routes.js as Route
boundary register_followUp.ejs as Register
control register.controller.js as SController
entity register_followUp.model as SModel
entity indicators.model as IModel
entity periodic_eval.model as QFollow
entity collabs.model as cm
entity questions_answers.model as Questions
entity indicators_metrics.model as IMetrics
database Nebula as db

' --- GET COLLABS ---
activate S
S -> Route : GET /view_collabs
deactivate S

activate Route
Route -> SController : get_register
deactivate Route

activate SController
SController ->> cm : fetchAllCompleteName()

activate cm
cm ->> db : SELECT id_colaborador, nombre, apellidos FROM colaborador

activate db
db ->> cm : info colaborador
deactivate db

cm -->> SController : promesa
deactivate cm 

SController ->> QFollow : fetchAllQuestions()

activate QFollow 
QFollow ->> db : SELECT * FROM preguntas_evaluacion
activate db
db ->> QFollow : info preguntas_evaluacion
deactivate db

QFollow -->> SController : promesa
deactivate QFollow 


' --- GET INFO INDICADORES ---
SController ->> IModel : fetchAllindicators()
activate IModel 
IModel ->> db : SELECT * FROM indicadores
activate db
db -->> IModel : info indicadores
deactivate db
IModel -->> SController : info indicadores
deactivate IModel 

SController -> S : JSON response (colaboradores, questions, indicator)
deactivate SController

' ---- REGISTER FOLLOW UP ----
activate S
S -> Route : fetch('/post_follow_ups', { method: 'POST' })
deactivate S

activate Route
Route -> SController : post_follow_ups()
deactivate Route

activate SController
create QFollow
SController -> QFollow: new QuestionsFollow(id_colaborador, fechaAgendada)
SController -> QFollow: save()

activate QFollow
QFollow -> db: INSERT INTO evaluaciones_de_seguimiento
activate db
db -->> QFollow: id_evaluacion
deactivate db

QFollow -->> SController: id_evaluacion
deactivate QFollow

create Questions
SController -> Questions: new Questions(id_pregunta, id_evaluation, respuesta)
SController -> Questions : save()

activate Questions
Questions -> db: INSERT INTO respuestas_evaluacion
activate db
db -->> Questions : Query OK
deactivate db 
Questions -->> SController : Promesa
deactivate Questions

create IMetrics
SController -> IMetrics : new Indicators_metrics(id_evaluation, id_indicador, valor_metrica)
SController -> IMetrics : save()

activate IMetrics
IMetrics -> db : INSERT INTO indicadores_metricas
activate db
db -->> IMetrics : Query OK
deactivate db 
IMetrics -->> SController: Promesa
deactivate IMetrics 

SController -> S : JSON response ("EvaluaciÃ³n guardada correctamente", id_evaluation)
deactivate SController

activate S
S -> S : window.location.href = "/follow_ups"
deactivate S

@enduml
