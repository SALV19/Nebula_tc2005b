@startuml REQ_36
autonumber
actor SuperAdmin as S
boundary general.routes.js as Route
boundary register_followUp.ejs as Register
control register.controller.js as SController
entity register_followUp.model as SModel
entity register_followUp.model as Model
entity collabs.model as cm
database Nebula as db

' --- GET COLLABS ---
activate S
S -> Route : GET /view_collabs
deactivate S

activate Route
Route -> SController : get_collabs()
deactivate Route

activate SController
SController ->> cm : fetchAll()

activate cm
cm ->> db : execute(SELECT * FROM colaborador)

activate db
db ->> cm : info colaborador
deactivate db

cm -->> SController : info colaborador
deactivate cm 

SController ->> Model : fetchAll()

activate Model 
Model ->> db : execute(SELECT * FROM preguntas_evaluacion)
activate db
db ->> Model : info preguntas_evaluacion
deactivate db

Model -->> SController : info preguntas_evaluacion
deactivate Model 

' --- GET INFO INDICADORES ---
SController ->> Model : fetchAll()
activate Model 
Model ->> db : execute(SELECT * FROM indicadores)
activate db
db -->> Model : info indicadores
deactivate db
Model -->> SController : info indicadores
deactivate Model 

SController -> Register : response.render('register_followUp.ejs')
deactivate SController

activate Register
Register -> S : HTML
deactivate Register

' ---- REGISTER FOLLOW UP ----
activate S
S -> Route : POST /follow_ups
deactivate S

activate Route
Route -> SController : post_follow_ups()
deactivate Route

activate SController
create SModel 
SController -> SModel: new FollowUp()
SController -> SModel : save()

activate SModel
SModel -> db : execute("INSERT INTO evaluaciones_de_seguimiento")
activate db
db -->> SModel : Query OK
deactivate db

SModel -->> SController : promise
deactivate SModel

SController -> Register : response.render('register_followUp.ejs')
deactivate SController

activate Register
Register -> S : HTML register_followUp.ejs
deactivate Register

@enduml
